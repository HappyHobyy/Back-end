name: HobbyHobby PhotoContent CI

on:
  push:
    branches: [ "feature/photo-content" ]

env:
  EC2_HOST: 52.79.143.36
  EC2_SSH_USER: ubuntu
  PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  AWS_S3_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY }}
  AWS_S3_SECRET_KEY: ${{ secrets.AWS_S3_SECRET_KEY }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Build with Gradle photocontent
        run: |
          cd hobbyhobby-photocontent
          chmod +x gradlew
          ./gradlew build

      - name: Docker image build photocontent
        run: |
          cd hobbyhobby-photocontent
          docker build \
            --build-arg AWS_S3_ACCESS_KEY=${AWS_S3_ACCESS_KEY} \
            --build-arg AWS_S3_SECRET_KEY=${AWS_S3_SECRET_KEY} \
            -t ${{ secrets.DOCKERHUB_USERNAME }}/photocontent .

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Hub push photocontent
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/photocontent

      - name: Send docker-compose.yml
        uses: appleboy/scp-action@master
        with:
          username: ${{ env.EC2_SSH_USER }}
          host: ${{ env.EC2_HOST }}
          key: ${{ env.PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/"

      - name: Send clean_log.py
        uses: appleboy/scp-action@master
        with:
          username: ${{ env.EC2_SSH_USER }}
          host: ${{ env.EC2_HOST }}
          key: ${{ env.PRIVATE_KEY }}
          source: "clean_log.py"
          target: "/home/ubuntu/"

  deploy-to-ec2:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ env.EC2_SSH_USER }}
          key: ${{ env.PRIVATE_KEY }}
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            cd /home/${{ env.EC2_SSH_USER }}
            docker-compose stop photocontent
            docker-compose rm -f photocontent
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/photocontent
            docker-compose up -d photocontent
  
