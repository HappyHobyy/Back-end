name: Java CI ,CD with Gradle and Docker

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
env:
  EC2_HOST: 52.79.143.36
  EC2_SSH_USER: ubuntu
  PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
  
jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0
        
    - name: Build with Gradle eureka
      run: |
        cd hobbyhobby-eureka
        chmod +x gradlew
        ./gradlew build

    - name: Build with Gradle gateway
      run: |
        cd hobbyhobby-gateway
        chmod +x gradlew
        ./gradlew build

    - name: Build with Gradle user
      run: |
        cd hobbyhobby-user
        chmod +x gradlew
        ./gradlew build
        
    - name: Build with Gradle textcontent
      run: |
        cd hobbyhobby-textcontent
        chmod +x gradlew
        ./gradlew build

    - name: Build with Gradle photocontent
      run: |
        cd hobbyhobby-photocontent
        chmod +x gradlew
        ./gradlew build

    - name: Build with Gradle community
      run: |
        cd hobbyhobby-community
        chmod +x gradlew
        ./gradlew build
      
    - name: Docker image build eureka
      run: |
        cd hobbyhobby-eureka
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/eureka .
      
    - name: Docker image build gateway
      run: |
        cd hobbyhobby-gateway
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/gateway .
      
    - name: Docker image build user
      run: |
        cd hobbyhobby-user
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/user .

    - name: Docker image build textcontent
      run: |
        cd hobbyhobby-textcontent
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/textcontent .
        
    - name: Docker image build photocontent
      run: |
        cd hobbyhobby-photocontent
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/photocontent .

    - name: Docker image build community
      run: |
        cd hobbyhobby-community
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/community .

    - name: Docker login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}

    - name: Docker Hub push eureka
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/eureka

    - name: Docker Hub push gateway
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/gateway

    - name: Docker Hub push user
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/user

    - name: Docker Hub push textcontent
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/textcontent
      
    - name: Docker Hub push photocontent
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/photocontent

    - name: Docker Hub push community
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/community
      
    - name: Send docker-compose.yml
      uses: appleboy/scp-action@master
      with:
          username: ${{ env.EC2_SSH_USER }}
          host: ${{ env.EC2_HOST }}
          key: ${{ env.PRIVATE_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu/"

  deploy-to-ec2:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ env.EC2_HOST }}
        username: ${{ env.EC2_SSH_USER }}
        key: ${{ env.PRIVATE_KEY }}
        script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
            cd /home/${{ env.EC2_SSH_USER }}
            docker rmi $(docker images -q)
            docker-compose down --volumes
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/eureka
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/gateway
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/user
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/textcontent
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/photocontent
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/community
            docker-compose up -d
  
